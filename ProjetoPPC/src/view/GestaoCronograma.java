/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.CronogramaAtividadesDao;
import dao.CronogramaDao;
import entity.Cronograma;
import entity.CronogramaAtividades;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gustavo
 */
public class GestaoCronograma extends javax.swing.JDialog {

    /**
     * Creates new form GerenciarCronogramaAtividades
     */
    public GestaoCronograma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaCronograma = new javax.swing.JTable();
        jCadastrarCronograma = new javax.swing.JButton();
        jConsultar = new javax.swing.JButton();
        jAlterar = new javax.swing.JButton();
        jExcluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabelaCronograma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaCronograma.setToolTipText("");
        jScrollPane1.setViewportView(jTabelaCronograma);

        jCadastrarCronograma.setText("Cadastrar Cronograma");
        jCadastrarCronograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCadastrarCronogramaActionPerformed(evt);
            }
        });

        jConsultar.setText("Consultar");
        jConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConsultarActionPerformed(evt);
            }
        });

        jAlterar.setText("Alterar");
        jAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAlterarActionPerformed(evt);
            }
        });

        jExcluir.setText("Excluir");
        jExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Cronogramas Cadastrados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(121, 121, 121)
                .addComponent(jCadastrarCronograma)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jConsultar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jAlterar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jExcluir)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCadastrarCronograma, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(249, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                        .addComponent(jAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(27, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ListaCronogramas();
    }//GEN-LAST:event_formWindowOpened

    private void jCadastrarCronogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCadastrarCronogramaActionPerformed
        CadastroCronograma cadastroCronograma = new CadastroCronograma(new javax.swing.JFrame(), true);
        cadastroCronograma.setVisible(true);
        ListaCronogramas();
    }//GEN-LAST:event_jCadastrarCronogramaActionPerformed

    private void jAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAlterarActionPerformed
        CadastroCronograma cadastroCronograma = new CadastroCronograma(new javax.swing.JFrame(), true);
        int index=-1;
        
        index=jTabelaCronograma.getSelectedRow();
      
        if(index!=-1){
        String identificador = jTabelaCronograma.getValueAt(jTabelaCronograma.getSelectedRow(), 0).toString();
        cadastroCronograma.AlteraCronograma(identificador);
        
        
        cadastroCronograma.setVisible(true);
        
        ListaCronogramas();
       }else{
           JOptionPane.showMessageDialog(this, "Selecione um cronograma para alterar.");
       }
    }//GEN-LAST:event_jAlterarActionPerformed

    private void jConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConsultarActionPerformed
        CadastroCronograma cadastroCronograma = new CadastroCronograma(new javax.swing.JFrame(), true);
        int index=-1;
        
        index=jTabelaCronograma.getSelectedRow();
      
        if(index!=-1){
        String identificador = jTabelaCronograma.getValueAt(jTabelaCronograma.getSelectedRow(), 0).toString();
        cadastroCronograma.ConsultaCronograma(identificador);
        
        cadastroCronograma.setVisible(true);
        
       }else{
           JOptionPane.showMessageDialog(this, "Selecione um cronograma para consultar.");
       }        
    }//GEN-LAST:event_jConsultarActionPerformed

    private void jExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExcluirActionPerformed
        CronogramaDao cronogramaDao = new CronogramaDao();
        int index=-1;
        
        index=jTabelaCronograma.getSelectedRow();
      
        if(index!=-1){
            String identificador = jTabelaCronograma.getValueAt(jTabelaCronograma.getSelectedRow(), 0).toString();
            int idCronograma= cronogramaDao.getIdCronograma(identificador);
            if(JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o cronograma?"
                    + "", "Excluir cronograma", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                if(cronogramaDao.Remove(idCronograma)){
                    CronogramaAtividadesDao cronogramaAtividadesDao = new CronogramaAtividadesDao();
                    cronogramaAtividadesDao.Remove(idCronograma);
                    JOptionPane.showMessageDialog(this, "Cronograma removido com sucesso.");
                    ListaCronogramas();
                }else{
                    JOptionPane.showMessageDialog(this, "Erro ao remover o cronograma.");
                }
           }
        }else{
           JOptionPane.showMessageDialog(this, "Selecione um cronograma para consultar.");
       }
    }//GEN-LAST:event_jExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestaoCronograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestaoCronograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestaoCronograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestaoCronograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestaoCronograma dialog = new GestaoCronograma(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    public void ListaCronogramas(){
       CronogramaDao cronogramaDao = new CronogramaDao();
       DefaultTableModel modeloTabela = (DefaultTableModel) jTabelaCronograma.getModel();
       
       modeloTabela.setNumRows(0);
       for(Cronograma cronograma : cronogramaDao.getCronogramas()){
           modeloTabela.addRow(new Object[]{
               cronograma.getIdentificador()
           });
       }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAlterar;
    private javax.swing.JButton jCadastrarCronograma;
    private javax.swing.JButton jConsultar;
    private javax.swing.JButton jExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelaCronograma;
    // End of variables declaration//GEN-END:variables
}
