/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.CronogramaAtividadesDao;
import dao.CronogramaDao;
import dao.CursoDao;
import dao.DisciplinaDao;
import dao.PlanoEnsinoDao;
import entity.Cronograma;
import entity.CronogramaAtividades;
import entity.Curso;
import entity.Disciplina;
import entity.PlanoEnsino;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author gbarboza
 */
public class CadastroPlanoDeEnsino extends javax.swing.JDialog {

    boolean novo=true;
    String identificadorAntigo;
    public CadastroPlanoDeEnsino(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        jTabelaCronograma.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaCronograma.getColumnModel().getColumn(1).setPreferredWidth(495);
        jTabelaCronograma.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField20 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTabelaCronograma = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jMetodologia = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        jCompetencias = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        jEmenta = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jAno = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jSemestre = new javax.swing.JTextField();
        jCargaHoraria = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPeriodos = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        jAvaliacao = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jBibliografia = new javax.swing.JTextArea();
        jCadastrar = new javax.swing.JButton();
        jSair = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jListaCronograma = new javax.swing.JComboBox<>();
        jListaCursos = new javax.swing.JComboBox<>();
        jIdentificador = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jListaDisciplina = new javax.swing.JComboBox<>();

        jLabel21.setText("Identificador do Plano de ensino");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabelaCronograma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Aula", "Conteúdo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTabelaCronograma);
        if (jTabelaCronograma.getColumnModel().getColumnCount() > 0) {
            jTabelaCronograma.getColumnModel().getColumn(0).setMinWidth(45);
            jTabelaCronograma.getColumnModel().getColumn(0).setPreferredWidth(45);
            jTabelaCronograma.getColumnModel().getColumn(0).setMaxWidth(45);
            jTabelaCronograma.getColumnModel().getColumn(1).setMinWidth(442);
            jTabelaCronograma.getColumnModel().getColumn(1).setPreferredWidth(442);
            jTabelaCronograma.getColumnModel().getColumn(1).setMaxWidth(442);
        }

        jMetodologia.setColumns(20);
        jMetodologia.setLineWrap(true);
        jMetodologia.setRows(5);
        jMetodologia.setWrapStyleWord(true);
        jScrollPane7.setViewportView(jMetodologia);

        jCompetencias.setColumns(20);
        jCompetencias.setLineWrap(true);
        jCompetencias.setRows(5);
        jCompetencias.setWrapStyleWord(true);
        jScrollPane8.setViewportView(jCompetencias);

        jEmenta.setColumns(20);
        jEmenta.setLineWrap(true);
        jEmenta.setRows(5);
        jEmenta.setWrapStyleWord(true);
        jScrollPane9.setViewportView(jEmenta);

        jLabel12.setText("METODOLOGIA DE ENSINO");

        jLabel13.setText("COMPETÊNCIAS E HABILIDADES");

        jLabel14.setText("EMENTA");

        jLabel15.setText("Carga Horária Semestral");

        jLabel16.setText("Disciplina");

        jLabel17.setText("Curso");

        jLabel18.setText("Ano");

        jCargaHoraria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jCargaHorariaKeyTyped(evt);
            }
        });

        jLabel19.setText("Período do Curso");

        jAvaliacao.setColumns(20);
        jAvaliacao.setLineWrap(true);
        jAvaliacao.setRows(5);
        jAvaliacao.setWrapStyleWord(true);
        jScrollPane10.setViewportView(jAvaliacao);

        jLabel22.setText("AVALIAÇÃO");

        jLabel23.setText("BIBLIOGRAFIA");

        jBibliografia.setColumns(20);
        jBibliografia.setLineWrap(true);
        jBibliografia.setRows(5);
        jBibliografia.setWrapStyleWord(true);
        jScrollPane11.setViewportView(jBibliografia);

        jCadastrar.setText("Salvar");
        jCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCadastrarActionPerformed(evt);
            }
        });

        jSair.setText("Sair");
        jSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSairActionPerformed(evt);
            }
        });

        jLabel24.setText("Semestre");

        jLabel1.setText("Selecionar Cronograma de Atividades:");

        jListaCronograma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jListaCronogramaItemStateChanged(evt);
            }
        });

        jLabel20.setText("Identificador do Plano de ensino");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 4, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jCadastrar)
                                            .addGap(18, 18, 18)
                                            .addComponent(jSair))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jListaCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jAno, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel24)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPeriodos, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel14)
                                            .addComponent(jScrollPane9)
                                            .addComponent(jLabel13)
                                            .addComponent(jScrollPane8)
                                            .addComponent(jLabel12)
                                            .addComponent(jScrollPane7)
                                            .addComponent(jLabel22)
                                            .addComponent(jScrollPane10)
                                            .addComponent(jLabel23)
                                            .addComponent(jScrollPane11)
                                            .addComponent(jScrollPane6)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jListaDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(226, 226, 226)))))))
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jListaCronograma, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jListaCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jListaDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jPeriodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jListaCronograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCadastrar)
                    .addComponent(jSair))
                .addContainerGap())
        );

        jScrollPane5.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
               if(novo){
            listaCursos();
            listaDisciplinas();
            listaCronogramas();
       }
    }//GEN-LAST:event_formWindowOpened

    private void jListaCronogramaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jListaCronogramaItemStateChanged
        CronogramaAtividadesDao cronogramaAtividadesDAO = new CronogramaAtividadesDao();
        CronogramaDao cronogramaDao = new CronogramaDao();
        
        if(jListaCronograma.getSelectedItem().toString()!="Selecione"){
            
            int idCronograma= cronogramaDao.getIdCronograma(jListaCronograma.getSelectedItem().toString());


            DefaultTableModel modeloTabela = (DefaultTableModel) jTabelaCronograma.getModel();
            modeloTabela.setNumRows(0);
            for(CronogramaAtividades cronogramaAtividades : cronogramaAtividadesDAO.getLista(idCronograma)){
                modeloTabela.addRow(new Object[]{
                    cronogramaAtividades.getAula(),
                    cronogramaAtividades.getConteudo()
                });
            }
        }
    }//GEN-LAST:event_jListaCronogramaItemStateChanged

    private void jCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCadastrarActionPerformed
        boolean dadosValidos = true;
        
        //Verifica as listas suspensas
        if(jListaCursos.getSelectedItem().toString().equals("Selecione")){
            JOptionPane.showMessageDialog(this, "Selecione o curso!");
            dadosValidos=false;
        }
        
        if(jListaDisciplina.getSelectedItem().toString().equals("Selecione")){
            JOptionPane.showMessageDialog(this, "Selecione a disciplina!");
            dadosValidos=false;
        }
        if(jListaCronograma.getSelectedItem().toString().equals("Selecione")){
            JOptionPane.showMessageDialog(this, "Selecione o cronograma!");
            dadosValidos=false;
        }        
        
        //Verifica os campos de texto
        if(jAno.getText().isEmpty() || jSemestre.getText().isEmpty() || jCargaHoraria.getText().isEmpty() ||
           jPeriodos.getText().isEmpty() || jEmenta.getText().isEmpty() || jCompetencias.getText().isEmpty() ||
            jMetodologia.getText().isEmpty() || jAvaliacao.getText().isEmpty() || jBibliografia.getText().isEmpty() ||
            jIdentificador.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
            dadosValidos=false;
        }
        
        //Caso todos os campos sejam validados, segue com a execução do programa
        if(dadosValidos){
            //Recupera o id do curso
            CursoDao cursoDao = new CursoDao();
            int idCurso = cursoDao.getIdCurso(jListaCursos.getSelectedItem().toString());
            
            //Recupera o id da disciplina
            DisciplinaDao disciplinaDao = new DisciplinaDao();
            int idDisciplina = disciplinaDao.getIdDisciplina(jListaDisciplina.getSelectedItem().toString());
            
            //Recupera o id do cronograma
            CronogramaDao cronogramaDao = new CronogramaDao();
            int idCronograma = cronogramaDao.getIdCronograma(jListaCronograma.getSelectedItem().toString());
            
            PlanoEnsino planoEnsino = new PlanoEnsino();
            planoEnsino.setAno(jAno.getText());
            planoEnsino.setSemestre(jSemestre.getText());
            planoEnsino.setCargaHoraria(Integer.parseInt(jCargaHoraria.getText()));
            planoEnsino.setPeriodo(jPeriodos.getText());
            planoEnsino.setEmenta(jEmenta.getText());
            planoEnsino.setCompetencias(jCompetencias.getText());
            planoEnsino.setMetodologia(jMetodologia.getText());
            planoEnsino.setAvaliacao(jAvaliacao.getText());
            planoEnsino.setBibliografia(jBibliografia.getText());
            planoEnsino.setIdentificador(jIdentificador.getText());
            
            PlanoEnsinoDao planoEnsinoDao = new PlanoEnsinoDao();
            
            if(novo){
                if(planoEnsinoDao.Insere(idCurso, idDisciplina, idCronograma, planoEnsino)){
                    JOptionPane.showMessageDialog(this, "Plano de ensino criado com sucesso!");
                }else{
                    JOptionPane.showMessageDialog(this, "Erro ao criar o plano de ensino!");
                }
            }else{
                int idPlanoEnsino = planoEnsinoDao.getIdPlanoEnsino(identificadorAntigo);
                if(planoEnsinoDao.Altera(idPlanoEnsino, idCurso, idDisciplina, idCronograma, planoEnsino)){
                    JOptionPane.showMessageDialog(this, "Plano de Ensino alterado com sucesso!");
                }else{
                    JOptionPane.showMessageDialog(this, "Erro ao alterar o plano de ensino!");
                }
            }
        }
    }//GEN-LAST:event_jCadastrarActionPerformed

    private void jSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSairActionPerformed
        dispose();
    }//GEN-LAST:event_jSairActionPerformed

    private void jCargaHorariaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCargaHorariaKeyTyped
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }      
    }//GEN-LAST:event_jCargaHorariaKeyTyped

    public void listaCursos(){
        CursoDao cursoDao = new CursoDao();
        List<Curso> listaCurso = cursoDao.getCursos();
        
        jListaCursos.removeAllItems();
        jListaCursos.addItem("Selecione");
        for (int i = 0; i < listaCurso.size(); i++) {
            jListaCursos.addItem(listaCurso.get(i).getDenominacao());
        }
    }
    public void listaDisciplinas(){
        DisciplinaDao disciplinaDao = new DisciplinaDao();
        List<Disciplina> listaDisciplina = disciplinaDao.getDisciplinas();
        
        jListaDisciplina.removeAllItems();
        jListaDisciplina.addItem("Selecione");
        for (int i = 0; i < listaDisciplina.size(); i++) {
            jListaDisciplina.addItem(listaDisciplina.get(i).getNome());
        }
    }
    public void listaCronogramas(){
        CronogramaDao cronogramaDao = new CronogramaDao();
        List<Cronograma> listaCronogramas = cronogramaDao.getCronogramas();
        
        jListaCronograma.removeAllItems();
        jListaCronograma.addItem("Selecione");
        for (int i = 0; i < listaCronogramas.size(); i++) {
            jListaCronograma.addItem(listaCronogramas.get(i).getIdentificador());
        }
    }
    
    public void AlteraPlano(String identificador){
       
        PlanoEnsinoDao planoEnsinoDao = new PlanoEnsinoDao();
        PlanoEnsino planoEnsino = new PlanoEnsino();
        CursoDao cursoDao = new CursoDao();
        DisciplinaDao disciplinaDao = new DisciplinaDao();
        CronogramaDao cronogramaDao = new CronogramaDao();
        
        planoEnsino= planoEnsinoDao.getPlanoEnsino(planoEnsinoDao.getIdPlanoEnsino(identificador));
        
        if(!planoEnsino.getIdentificador().isEmpty()){
            listaCursos();
            listaDisciplinas();
            listaCronogramas();
            
            //Preenche o combobox curso
            Curso curso = cursoDao.getCurso(planoEnsino.getFk_id_curso());
            jListaCursos.setSelectedItem(curso.getDenominacao());
            
            //Preenche o combobox disciplina
            Disciplina disciplina = disciplinaDao.getNomeDisciplina(planoEnsino.getFk_id_disciplina());
            jListaDisciplina.setSelectedItem(disciplina.getNome());
            
            //Preenche o combobox cronograma
            Cronograma cronograma = cronogramaDao.getCronograma(planoEnsino.getFk_id_cronograma());
            jListaCronograma.setSelectedItem(cronograma.getIdentificador());
            
            //Preenche os campos de texto
            jAno.setText(planoEnsino.getAno());
            jSemestre.setText(planoEnsino.getSemestre());
            jCargaHoraria.setText(String.valueOf(planoEnsino.getCargaHoraria()));
            jPeriodos.setText(planoEnsino.getPeriodo());
            jEmenta.setText(planoEnsino.getEmenta());
            jCompetencias.setText(planoEnsino.getCompetencias());
            jMetodologia.setText(planoEnsino.getMetodologia());
            jAvaliacao.setText(planoEnsino.getAvaliacao());
            jBibliografia.setText(planoEnsino.getBibliografia());
            jIdentificador.setText(planoEnsino.getIdentificador());
            
            //Atribui o valor do identificador recuperado da base de dados à váriavel identificadorAntigo, utilizada ao salvar a alteração
            identificadorAntigo=jIdentificador.getText();
                       
            novo=false;
        }else{
            JOptionPane.showMessageDialog(this, "Erro ao buscar o plano de ensino");
        }
    }
    public void ConsultaPlano(String identificador){
        PlanoEnsinoDao planoEnsinoDao = new PlanoEnsinoDao();
        PlanoEnsino planoEnsino = new PlanoEnsino();
        CursoDao cursoDao = new CursoDao();
        DisciplinaDao disciplinaDao = new DisciplinaDao();
        CronogramaDao cronogramaDao = new CronogramaDao();
        
        planoEnsino= planoEnsinoDao.getPlanoEnsino(planoEnsinoDao.getIdPlanoEnsino(identificador));
        
        if(!planoEnsino.getIdentificador().isEmpty()){
            listaCursos();
            listaDisciplinas();
            listaCronogramas();
            
            //Preenche o combobox curso
            Curso curso = cursoDao.getCurso(planoEnsino.getFk_id_curso());
            jListaCursos.setSelectedItem(curso.getDenominacao());
            
            //Preenche o combobox disciplina
            Disciplina disciplina = disciplinaDao.getNomeDisciplina(planoEnsino.getFk_id_disciplina());
            jListaDisciplina.setSelectedItem(disciplina.getNome());
            
            //Preenche o combobox cronograma
            Cronograma cronograma = cronogramaDao.getCronograma(planoEnsino.getFk_id_cronograma());
            jListaCronograma.setSelectedItem(cronograma.getIdentificador());
            
            //Preenche os campos de texto
            jAno.setText(planoEnsino.getAno());
            jSemestre.setText(planoEnsino.getSemestre());
            jCargaHoraria.setText(String.valueOf(planoEnsino.getCargaHoraria()));
            jPeriodos.setText(planoEnsino.getPeriodo());
            jEmenta.setText(planoEnsino.getEmenta());
            jCompetencias.setText(planoEnsino.getCompetencias());
            jMetodologia.setText(planoEnsino.getMetodologia());
            jAvaliacao.setText(planoEnsino.getAvaliacao());
            jBibliografia.setText(planoEnsino.getBibliografia());
            jIdentificador.setText(planoEnsino.getIdentificador());
            
            //Desabilita botoes do formulario
            jListaCursos.setEnabled(false);
            jListaCronograma.setEnabled(false);
            jListaDisciplina.setEnabled(false);
            jCadastrar.setEnabled(false);
            
            novo=false;
        }else{
            JOptionPane.showMessageDialog(this, "Erro ao buscar o plano de ensino");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPlanoDeEnsino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPlanoDeEnsino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPlanoDeEnsino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPlanoDeEnsino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastroPlanoDeEnsino dialog = new CadastroPlanoDeEnsino(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAno;
    private javax.swing.JTextArea jAvaliacao;
    private javax.swing.JTextArea jBibliografia;
    private javax.swing.JButton jCadastrar;
    private javax.swing.JTextField jCargaHoraria;
    private javax.swing.JTextArea jCompetencias;
    private javax.swing.JTextArea jEmenta;
    private javax.swing.JTextField jIdentificador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JComboBox<String> jListaCronograma;
    private javax.swing.JComboBox<String> jListaCursos;
    private javax.swing.JComboBox<String> jListaDisciplina;
    private javax.swing.JTextArea jMetodologia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPeriodos;
    private javax.swing.JButton jSair;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jSemestre;
    private javax.swing.JTable jTabelaCronograma;
    private javax.swing.JTextField jTextField20;
    // End of variables declaration//GEN-END:variables
}
